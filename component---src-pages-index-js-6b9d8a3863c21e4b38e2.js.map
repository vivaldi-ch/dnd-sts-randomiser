{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","className","to","type","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","children","data","_856328897","Fragment","header","site","siteMetadata","paddingTop","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-6b9d8a3863c21e4b38e2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Welcome!</h1>\n    <p>Use these to generate randomised loots after an encounter or to generate merchant list.</p>\n    <p>Only use on your dungeon master&apos;s discretion.</p>\n    <div className=\"flex flex-row\">\n      <div className=\"p-2\">\n        <Link to=\"/encounter/normal\">\n          <button className=\"btn\" type=\"button\">Normal</button>\n        </Link>\n      </div>\n      <div className=\"p-2\">\n        <Link to=\"/encounter/deadly\">\n          <button className=\"btn\" type=\"button\">Deadly</button>\n        </Link>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'dimgrey',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport '../styles/tailwind.css';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        className=\"layout-wrapper\"\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}